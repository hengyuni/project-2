{"version":3,"sources":["Component/Stats.js","Component/Pokemon.js","Component/Sprite.js","Component/Pokedex.js","Component/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Stats","pokemonData","className","stats","map","pokemon","stat","name","toUpperCase","base_stat","Pokemon","props","pokemonId","match","params","useState","mockData","setPokemonData","types","setTypes","getData","a","fetch","res","json","data","length","type","console","log","useEffect","id","src","sprites","front_default","alt","width","height","weight","base_experience","Sprite","pokemonSprite","setPokemonSprite","setPokemonId","getSprite","url","Pokedex","i","to","Footer","App","getPokemonData","results","exact","path","render","routerProps","filter","p","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.32886377.chunk.js","sourcesContent":["\n\nexport default function Stats({pokemonData}) {\n  return (\n    <div className=\"stats-container\">\n        {/* <h4>STATS:</h4> */}\n          {pokemonData.stats &&\n            pokemonData.stats.map((pokemon) => {\n              return (\n                <div className=\"stats\">\n                  <p key={pokemon.stat.name}>\n                    {pokemon.stat.name.toUpperCase()}: {pokemon.base_stat}\n                  </p>\n                </div>\n              );\n            })}\n        </div>\n  )  \n}","import React from 'react'\n// import Sprite from './Component/Sprite'\nimport { useState, useEffect} from 'react'\nimport mockData from \"../mockData.json\"\nimport Stats from \"./Stats.js\"\n\nconst Pokemon = (props) => {\n  const {match} = props;\n  const {params} = match;\n  const {pokemonId} = params;\n  // console.log(params)\n  // console.log(props)\n  // console.log(mockData)\n\n  const [pokemonData, setPokemonData] = useState(mockData)\n  const [types, setTypes] = useState([])\n\n  const getData = async () => {\n    // let temp = null;\n    try {\n      const res = await fetch(\"https://pokeapi.co/api/v2/pokemon/\" + pokemonId)\n      const data = await res.json();\n      if(data.types.length === 1) {\n        setTypes(<p>TYPE: {data.types[0].type.name.toUpperCase()}</p>);\n      } else {\n        setTypes(<p>TYPES: {data.types[0].type.name.toUpperCase()}/{data.types[1].type.name.toUpperCase()}</p>);\n      }\n      setPokemonData(data)\n    } catch (err) {\n      console.log(err)\n    }\n  }\n\n  useEffect(()=> {\n    getData();\n  }, []);\n\n  // console.log(pokemonData)\n\n  if(pokemonData === \"undefined\") {\n    return (\n      <h1>loading...</h1>\n    )\n  }\n\n  // let getDeez = () => {\n  //   if(pokemonData.types[1] !== \"undefined\") {\n  //     return <p>{pokemonData.type[1].type.name}</p>\n  //   }\n  // }\n\n  // let secondType = pokemonData.type[1].type.name;\n  // let setSecondType = secondType !== \"undefined\" ? secondType : null;\n\n  // console.log(pokemonData.types);\n  return (\n    <div className=\"App\">\n      <h1>#{pokemonData.id}. {pokemonId.toUpperCase()}</h1>\n      <div className=\"pokemon-container\">\n        <div className=\"pokemon-image-container\">\n          <img src={pokemonData.sprites.front_default} alt=\"pokemon front\" width=\"150px\" className=\"pokemonPage-img\"/>\n        </div>\n      <div className=\"basic-info\">\n        {/* <p>{pokemonData.id}</p> */}\n        {types}\n        <p>HEIGHT: {pokemonData.height / 10}m</p>\n        <p>WEIGHT: {pokemonData.weight / 10}kg</p>\n        <p>\n          BASE EXP: {pokemonData.base_experience}\n        </p>\n      </div>\n      <Stats pokemonData={pokemonData}/>\n      </div>\n    </div>\n  );\n}\n\nexport default Pokemon;\n\n\n\n\n\n","import { useState, useEffect } from \"react\";\n\nexport default function Sprite ({ pokemon }) {\n  const [pokemonSprite, setPokemonSprite] = useState(\"\")\n  const [pokemonId, setPokemonId] = useState(\"\")\n\n  const getSprite = async () => {\n    try {\n      const res = await fetch(pokemon.url);\n      const data = await res.json();\n      setPokemonSprite(data.sprites.front_default)\n      setPokemonId(data.id)\n      // console.log(data)\n    } catch (err) {\n      console.log(err)\n    }\n  }\n\n  useEffect(()=>{\n    getSprite();\n  }, []);\n\n\n  return (\n    <div>\n      {/* <p>{pokemonId}</p> */}\n      <img src={pokemonSprite} alt={pokemon.name} className=\"sprite\" width=\"150px\"/>\n    </div>\n  )\n}","import Sprite from \"./Sprite\"\nimport { Link } from 'react-router-dom'\n\nexport default function Pokedex({ pokemonData }) {\n  if (pokemonData === 'undefined') {\n    return <h1>loading...</h1>\n  }\n  // console.log(pokemonData)\n  return (\n    <div className=\"pokedex-container\">\n      {/* <h1>POKÉDEX</h1> */}\n      <div className=\"pokedex\">\n      {pokemonData.map((pokemon, i) => {\n        // console.log(pokemon)\n        console.log(pokemon)\n        console.log(pokemonData)\n        return (\n        <Link to={`/${pokemon.name}`} key={i}>\n          <Sprite pokemon={pokemon} />\n          {/* <h4>{i +1}</h4> */}\n          <h4 className=\"main-text\">{pokemon.name.toUpperCase()}</h4>\n        </Link>\n        )\n      })}\n      </div>\n    </div>\n  );\n}\n","export default function Footer() {\n  return (\n    <footer>\n      <h3 className=\"footer-text\">HENGYU NI 2021</h3>\n    </footer>\n  )\n}","import './App.css';\nimport { HashRouter as Router, Route, Switch, Link } from 'react-router-dom'\nimport { useState, useEffect} from \"react\";\nimport Pokemon from './Component/Pokemon.js';\nimport Pokedex from './Component/Pokedex.js';\nimport Footer from './Component/Footer.js';\n// import mockData from './mockData'\n\nexport default function App () {\n  const [pokemonData, setPokemonData] = useState([]);\n  const getPokemonData = async () => {\n    try {\n      const res = await fetch (`https://pokeapi.co/api/v2/pokemon?limit=151/`)\n      const data = await res.json();\n      setPokemonData(data.results);\n      // console.log(data.results[2]);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  useEffect(() => {\n    getPokemonData();\n  }, []);\n\n  return (\n    <div>\n      <nav>\n        <Link to=\"/\" ><img src=\"https://pixelartmaker-data-78746291193.nyc3.digitaloceanspaces.com/image/bd571ae3cac22f6.png\" alt=\"pokeball\" width=\"100px\" /></Link>\n        <Link to=\"/\" className=\"nav-text\">POKÉDEX</Link>\n      </nav>\n      <Switch>\n        {/* <Route\n          path={\"/\"}\n          exact\n          component={ Pokedex.js}\n        /> */}\n        <Route exact path=\"/\" render={() => <Pokedex pokemonData={pokemonData} />} />\n        <Route\n        exact\n        path=\"/:pokemonId\"\n        render={(routerProps) => {\n          // return <Pokemon routerProps={routerProps} />\n          const pokemon = [...pokemonData].filter(\n            (p) => p.id === routerProps.match.params.id\n          );\n          // console.log(pokemon)\n          return <Pokemon {...routerProps} pokemon={pokemon[0]} />;\n        }}\n      />\n      </Switch>\n      <Footer />\n    </div>\n  );\n}\n\n// HOVER EFFECT TO SHINY POKEMON!!! HFM\n\n// add search engine? HFM\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App'\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router } from \"react-router-dom\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n"],"sourceRoot":""}